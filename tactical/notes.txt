ToDos
* Releases
  + Make release metrics clickable
  + Figure out how to handle test


* Epic Burndowns
  + overlay a line with cumulative velocity on it; velocity moving average - last N completed time periods
  + Refactor bucketing deltas
      Rather than just storing the deltas, let's store a tuple for each issue affected on a date. These are the bucket:{key:[deltas]}
      Now we can generate the exact list of what is in each date bucket my iterating over dates and merging deltas.
      The keys in each new, work, unest are implied from the deltas.
      Pretty clsoe to what I have now but integrated into on tuple of 5. Should be a lot neater and easier to read.


* Epic staffing
  + Fix the QA user groups... Many do exist... Need updating
  + Arch POC filter based on label


* Whos What Report
  Columns of chapters
  Rows are KeepLightsOn, Infra, ChapterWork, and one per active LAB epic
  From the set of all In Progress ticket per chapter
  From the set of all in Progress LAB epic
  (Basically the opposite of the top of the kickoff report)
    Show avatars and names. Make people clickable to show the work, hover tag shows list of work assigned and in progess
  Options to:
      Include LAB epics not-yet-In-Progress (and the child stories/tasks/etc.)
      Include all Chapter work not-yet-In-Progress
      Hide anything not updated in N days (not really in progress)
      Hide assigned to non-devs
      Hide escalations
      Hide bugs


* Put all styles in a master css that is loaded in base layout.html
* Add optional maxResults and startAt to both jira query utils.
* Reduce query overhead with explicit fields and extend query params
* In Jira utils, can I make a generator that will deal with query pagination?
* Move data into local sqllite and marshmallow-sqlalchemy
